buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
		mavenCentral()
    }
	// This is only here while FG is under active development
	configurations.classpath {
		resolutionStrategy {
			cacheDynamicVersionsFor 10, "seconds"
			cacheChangingModulesFor 0, "seconds"
		}
	}
    dependencies {
        classpath group: "net.minecraftforge.gradle", name: "ForgeGradle", version: "3.+", changing: true
    }
}

apply plugin: "net.minecraftforge.gradle"

def BUILD_NUMBER = System.getenv("BUILD_NUMBER") ?: "0"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

version = major_version + "." + minor_version + "." + BUILD_NUMBER
group = "net.blay09.mods"
archivesBaseName = mod_name + "_" + minecraft_version

minecraft {
	mappings channel: mappings_channel, version: mappings_version

	runs {
		client = {
			workingDirectory project.file('run')
//            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'

			mods {
				trashslot {
					source sourceSets.main
				}
			}
		}
		server = {
			workingDirectory project.file('run')
//            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
			property 'forge.logging.console.level', 'debug'

			mods {
				trashslot {
					source sourceSets.main
				}
			}
		}
	}
}

dependencies {
	minecraft([
		group  : "${forge_group}",
		name   : "forge",
		version: "${minecraft_version}-${forge_version}"
	])
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes(["Specification-Title": mod_id,
                    "Specification-Vendor": "BlayTheNinth",
                    "Specification-Version": "24.0", // We are version 1 of the modlauncher specification
                    "Implementation-Title": project.name,
                    "Implementation-Version": "${version}",
                    "Implementation-Vendor" :"BlayTheNinth",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
    }
}
